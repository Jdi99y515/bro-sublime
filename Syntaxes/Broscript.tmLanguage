<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>bro</string>
	</array>
	<key>name</key>
	<string>Broscript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#directives</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bro</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=in|=\s|=|,|\()\s*(/)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bro</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.regexp.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.bro</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.variable.namespace.bro</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.scope.namespace.bro</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.bro</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(function|hook|event)\s+(?:([a-zA-Z_]{1}[0-9a-zA-Z_-]*)(::))?([0-9a-zA-Z_-]+)</string>
			<key>name</key>
			<string>meta.function.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attributes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>##</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.block.documentation.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=##\ )([0-9a-zA-Z_-]+)(?=:)</string>
					<key>name</key>
					<string>variable.parameter.bro</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.number-sign.bro</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#statements</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#declarations</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attributes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.variable.namespace.bro</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z_]{1}[0-9a-zA-Z_-]*)(::)</string>
			<key>name</key>
			<string>meta.scope.namespace.bro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(syslog|system|piped_exec|srand|rand|md5_hash|md5_hash_init|md5_hash_update|md5_hash_finish|md5_hmac|sha1_hash|sha1_hash_init|sha1_hash_update|sha1_hash_finish|sha256_hash|sha256_hash_init|sha256_hash_update|sha256_hash_finish|strftime|lookup_addr|lookup_hostname|identify_data|unique_id|unique_id_from|terminate|exit|bro_version|getpid|gethostname|current_time|network_time|is_local_interface|open|open_for_append|close|active_file|write_file|file_size|get_file_name|set_buf|flush_all|mkdir|enable_raw_output|length|clear_table|resize|any_set|all_set|sort|order|floor|sqrt|exp|ln|log10|byte_len|sub_bytes|split|split1|split_all|split_n|str_split|string_cat|cat_string_array|cat_string_array_n|join_string_array|join_string_vec|sort_string_array|sub|gsub|strcmp|strstr|subst_string|to_lower|to_upper|is_ascii|edit|clean|to_string_literal|escape_string|string_to_ascii_hex|strip|string_fill|str_shell_escape|find_all|find_last|hexdump|find_entropy|entropy_test_init|entropy_test_add|entropy_test_finish|is_v4_addr|is_v6_addr|mask_addr|remask_addr|is_tcp_port|is_udp_port|is_icmp_port|connection_exists|lookup_connection|unescape_URI|lookup_location|lookup_asn|cat|cat_sep|fmt|to_int|int_to_count|double_to_count|to_count|to_double|interval_to_double|double_to_interval|time_to_double|double_to_time|port_to_count|count_to_port|to_port|count_to_v4_addr|to_addr|raw_bytes_to_v4_addr|ptr_name_to_addr|addr_to_ptr_name|addr_to_counts|counts_to_addr|to_subnet|bytestring_to_hexstr|decode_base64|decode_base64_custom|uuid_to_string|merge_pattern|convert_for_pattern|string_to_pattern|)\b</string>
			<key>name</key>
			<string>support.type.bro</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&amp;)(redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column)</string>
					<key>name</key>
					<string>meta.property.bro</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b((25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])/(3[0-2]|[1-2]?[0-9])\b</string>
					<key>name</key>
					<string>constant.other.subnet.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])\b(?!/)</string>
					<key>name</key>
					<string>constant.other.ip.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((6[0-5]{2}[0-3][0-5]|[1-5]?[0-9]{1,4})/(tcp|udp|icmp))\b</string>
					<key>name</key>
					<string>constant.other.port.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(([0-9]+)\s?((sec|min|hr|day)s?))\b</string>
					<key>name</key>
					<string>constant.other.interval.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![0-9])(\s*-?)\.\b([0-9]*)\b(?!\.)|(?&lt;!\.)(\s*-?)\b([0-9]+\.[0-9]+)\b(?!\.)</string>
					<key>name</key>
					<string>constant.numeric.float.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(0(x|X)[0-9a-fA-F]+)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)(\s*-?)\b([0-9]+)\b(?!\.|/|\s(sec|secs|min|mins|day|days))</string>
					<key>name</key>
					<string>constant.numeric.integer.decimal.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(T|F)\b</string>
					<key>name</key>
					<string>constant.language.boolean.bro</string>
				</dict>
			</array>
		</dict>
		<key>declarations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.variable.namespace.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*(module)\s+([a-zA-Z_]{1}[0-9a-zA-Z_-]*)</string>
					<key>name</key>
					<string>keyword.control.import.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(export)\b</string>
					<key>name</key>
					<string>keyword.control.export.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(const|type|redef|function|event|hook)\b</string>
					<key>name</key>
					<string>storage.modifier.declaration.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(global)\b</string>
					<key>name</key>
					<string>storage.modifier.global.bro</string>
				</dict>
			</array>
		</dict>
		<key>directives</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(\@)(load|load-sigs|unload)\s+(.*)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.bro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.bro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.definition.bro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(\@)(prefixes)\s+(=|\+=)\s+([0-9a-zA-Z_-]+)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.bro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.def.bro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.bro</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>text.plain.bro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.bro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.directive.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*(\@)(if|ifdef|ifndef|else|endif)\b</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.placeholder.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\@DEBUG|\@DIR|\@FILENAME)</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\!|&amp;&amp;|\|\||\b(in)\b)</string>
					<key>name</key>
					<string>keyword.operator.logical.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(&lt;|&lt;\=|&gt;\=|&gt;|\=\=|\!\=)</string>
					<key>name</key>
					<string>keyword.operator.comparison.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+\=|-\=|\*\=|/\=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.augmented.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+\+|\-\-)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+|\-|\*|/|%)(?!\+|\-)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.length.bro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.length.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\|)([a-zA-Z_]{1}[0-9a-zA-Z_-]+)(\|)</string>
					<key>name</key>
					<string>text.plain.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\??\$)</string>
					<key>name</key>
					<string>keyword.operator.dereference.bro</string>
				</dict>
			</array>
		</dict>
		<key>statements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(local|add|delete|print|for|next|break|if|switch|break|fallthrough|when|schedule|return)\b</string>
					<key>name</key>
					<string>keyword.control.flow.bro</string>
				</dict>
			</array>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{,2}|[4-7]\d?|x[a-fA-F0-9]{,2})</string>
					<key>name</key>
					<string>constant.character.escape.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.bro</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
						(\d+\$)?                             # field (argument #)
						[#0\- +']*                           # flags
						[,;:_]?                              # separator character (AltiVec)
						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
						[diouxXDOUeEfFgGaACcSspn%]           # conversion type
					</string>
					<key>name</key>
					<string>constant.other.placeholder.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.bro</string>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(bool|count|int|double|time|interval|string|pattern|port|addr|subnet|time|enum|table|set|vector|record|function|event|hook|file|opaque|any)\b</string>
					<key>name</key>
					<string>storage.type.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(of)\b</string>
					<key>name</key>
					<string>keyword.operator.bro</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.bro</string>
	<key>uuid</key>
	<string>d301f32f-e93c-4f8f-9da6-b87926f53d4f</string>
</dict>
</plist>
