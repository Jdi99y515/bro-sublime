<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>bro</string>
	</array>
	<key>name</key>
	<string>Broscript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#directives</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bro</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=in|=\s|=|,|\()\s*(/)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bro</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.regexp.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.bro</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.variable.namespace.bro</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.scope.namespace.bro</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.bro</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(function|hook|event)\s+(?:([a-zA-Z_][0-9a-zA-Z_-]*)(::))?([0-9a-zA-Z_-]+)</string>
			<key>name</key>
			<string>meta.function.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attributes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>##</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.block.documentation.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=##\ )([a-zA-Z_][0-9a-zA-Z_-]+)(?=:\ )</string>
					<key>name</key>
					<string>variable.parameter.bro</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.number-sign.bro</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin-functions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#statements</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#declarations</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attributes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.variable.namespace.bro</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z_][0-9a-zA-Z_-]*)(::)</string>
			<key>name</key>
			<string>meta.scope.namespace.bro</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&amp;)(redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column)</string>
					<key>name</key>
					<string>meta.property.bro</string>
				</dict>
			</array>
		</dict>
		<key>builtin-functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.builtin.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\$)\b(active_file|addr_to_counts|addr_to_ptr_name|all_set|anonymize_addr|any_set|bro_is_terminating|bro_version|bytestring_to_count|bytestring_to_double|bytestring_to_hexstr|calc_next_rotate|capture_events|capture_state_updates|cat|cat_sep|checkpoint_state|clear_table|close|complete_handshake|connect|connection_exists|continue_processing|convert_for_pattern|count_to_port|count_to_v4_addr|counts_to_v4_addr|counts_to_addr|current_analyzer|current_time|decode_base64|decode_base64_custom|disable_analyzer|disable_print_hook|disconnect|do_profiling|double_to_count|double_to_interval|double_to_time|dump_current_packet|dump_packet|dump_rule_stats|enable_communication|enable_raw_output|encode_base64|encode_base64_custom|entropy_test_add|entropy_test_finish|entropy_test_init|exit|exp|file_magic|file_mode|file_size|find_entropy|floor|flush_all|fmt|get_conn_transport_proto|get_current_packet|get_event_peer|get_file_name|get_local_event_peer|get_matcher_stats|get_port_transport_proto|getenv|gethostname|getpid|global_ids|global_sizes|hexstr_to_bytestring|identify_data|install_dst_addr_filter|install_dst_net_filter|install_pcap_filter|install_src_addr_filter|install_src_net_filter|int_to_count|interval_to_double|is_external_connection|is_icmp_port|is_local_interface|is_remote_event|is_tcp_port|is_udp_port|is_v4_addr|is_v6_addr|listen|ln|log10|lookup_ID|lookup_addr|lookup_asn|lookup_connection|lookup_hostname|lookup_hostname_txt|lookup_location|mask_addr|match_signatures|md5_hash|md5_hash_finish|md5_hash_init|md5_hash_update|md5_hmac|merge_pattern|mkdir|net_stats|network_time|open|open_for_append|order|pcap_error|piped_exec|port_to_count|precompile_pcap_filter|preserve_prefix|preserve_subnet|ptr_name_to_addr|rand|raw_bytes_to_v4_addr|reading_live_traffic|record_fields|record_type_to_vector|remask_addr|request_remote_events|request_remote_logs|request_remote_sync|rescan_state|resize|resource_usage|resume_state_updates|rotate_file|rotate_file_by_name|routing0_data_to_addrs|same_object|send_capture_filter|send_current_packet|send_id|send_ping|send_state|set_accept_state|set_buf|set_compression_level|set_inactivity_timeout|set_record_packets|setenv|sha1_hash|sha1_hash_finish|sha1_hash_init|sha1_hash_update|sha256_hash|sha256_hash_finish|sha256_hash_init|sha256_hash_update|skip_further_processing|sort|sqrt|srand|strftime|string_to_pattern|strptime|suspend_processing|suspend_state_updates|syslog|system|system_env|terminate|terminate_communication|time_to_double|to_addr|to_count|to_double|to_int|to_port|to_subnet|type_name|uninstall_dst_addr_filter|uninstall_dst_net_filter|uninstall_src_addr_filter|uninstall_src_net_filter|unique_id|unique_id_from|uuid_to_string|val_size|write_file)\s*(?=\()</string>
					<key>name</key>
					<string>meta.function-call.bro.bif.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.builtin.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\$)\b(cat_string_array|cat_string_array_n|clean|edit|escape_string|find_all|find_last|gsub|hexdump|is_ascii|join_string_array|join_string_vec|levenshtein_distance|reverse|sort_string_array|split|split1|split_all|split_n|str_shell_escape|str_smith_waterman|str_split|strcmp|string_cat|string_fill|string_to_ascii_hex|strip|strstr|sub|sub_bytes|subst_string|to_lower|to_string_literal|to_upper)(?=\()</string>
					<key>name</key>
					<string>meta.function-call.strings.bif.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.variable.namespace.bro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.bro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.function.builtin.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\$)\b(Reporter)(::)(error|fatal|info|warning)(?=\()</string>
					<key>name</key>
					<string>meta.function-call.reporter.bif.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.builtin.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\$)\b(OS_version_found|ack_above_hole|bro_done|bro_init|bro_script_loaded|conn_stats|conn_weird|connection_external|connection_flow_label_changed|connection_reused|connection_state_remove|connection_status_update|connection_timeout|content_gap|dns_mapping_altered|dns_mapping_lost_name|dns_mapping_new_name|dns_mapping_unverified|dns_mapping_valid|esp_packet|event_queue__flush_point|file_gap|file_new|file_opened|file_over_new_connection|file_state_remove|file_timeout|finished_send_state|flow_weird|gap_report|get_file_handle|ipv6_ext_headers|load_sample|mobile_ipv6_message|net_weird|new_connection|new_event|new_packet|packet_contents|profiling_update|protocol_confirmation|protocol_violation|remote_capture_filter|remote_connection_closed|remote_connection_error|remote_connection_established|remote_connection_handshake_done|remote_event_registered|remote_log|remote_log_peer|remote_pong|remote_state_access_performed|remote_state_inconsistency|reporter_error|reporter_info|reporter_warning|rexmit_inconsistency|scheduled_analyzer_applied|signature_match|software_parse_error|software_unparsed_version_found|software_version_found|tunnel_changed|udp_session_done)\s*(?=\()</string>
					<key>name</key>
					<string>meta.event-call.event.bif.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\$)\b(anonymization_mapping|gaobot_signature_found|kazaa_signature_found|napster_signature_found|print_hook|root_backdoor_signature_found|rotate_interval|rotate_size)(?=\()</string>
					<key>name</key>
					<string>meta.event-call.deprecated.bro</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b((25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])/(3[0-2]|[1-2]?[0-9])\b</string>
					<key>name</key>
					<string>constant.other.subnet.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[\b(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\]/(12[0-8]|1[0-1][0-9]|[1-2]?[0-9])\b</string>
					<key>name</key>
					<string>constant.other.ip6.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!::)\b((25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])\b(?!/)</string>
					<key>name</key>
					<string>constant.other.ip.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[\b(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\b\](?!/)</string>
					<key>name</key>
					<string>constant.other.ip6.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((6[0-5]{2}[0-3][0-5]|[1-5]?[0-9]{1,4})/(tcp|udp|icmp))\b</string>
					<key>name</key>
					<string>constant.other.port.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((\s*-?)([0-9]+)\s?((sec|min|hr|day)s?))\b</string>
					<key>name</key>
					<string>constant.other.interval.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![0-9])(\s*-?)\.\b([0-9]*)\b(?!\.)|(?&lt;!\.)(\s*-?)\b([0-9]+\.[0-9]+)\b(?!\.)</string>
					<key>name</key>
					<string>constant.numeric.float.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(0(x|X)[0-9a-fA-F]+)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|:)(\s*-?)\b([0-9]+)\b(?!\.|:|/|\s(sec|secs|min|mins|day|days))</string>
					<key>name</key>
					<string>constant.numeric.integer.decimal.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(T|F)\b</string>
					<key>name</key>
					<string>constant.language.boolean.bro</string>
				</dict>
			</array>
		</dict>
		<key>declarations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.variable.namespace.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*(module)\s+([a-zA-Z_][0-9a-zA-Z_-]*)</string>
					<key>name</key>
					<string>keyword.control.import.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(export)\b</string>
					<key>name</key>
					<string>keyword.control.export.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(const|type|redef|function|event|hook)\b</string>
					<key>name</key>
					<string>storage.modifier.declaration.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(global)\b</string>
					<key>name</key>
					<string>storage.modifier.global.bro</string>
				</dict>
			</array>
		</dict>
		<key>directives</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(\@)(load|load-sigs|unload)\s+(.*)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.bro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.bro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.definition.bro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(\@)(prefixes)\s+(=|\+=)\s+([a-zA-Z_][0-9a-zA-Z_-]+)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.bro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.def.bro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.bro</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>text.plain.bro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.directive.bro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.directive.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*(\@)(if|ifdef|ifndef|else|endif)\b</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.placeholder.bro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\@DEBUG|\@DIR|\@FILENAME)</string>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
			</array>
		</dict>
		<key>generic_names</key>
		<dict>
			<key>match</key>
			<string>[A-Za-z_][A-Za-z0-9_]*</string>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(bool|int|count|counter|double|time|interval|string|pattern|enum|port|addr|subnet|any|table|set|vector|record|opaque|file|function|event|hook)</string>
					<key>name</key>
					<string>invalid.illegal.name.type.bro</string>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\!|&amp;&amp;|\|\||\b(in)\b)</string>
					<key>name</key>
					<string>keyword.operator.logical.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(&lt;|&lt;\=|&gt;\=|&gt;|\=\=|\!\=)</string>
					<key>name</key>
					<string>keyword.operator.comparison.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+\=|-\=|\*\=|/\=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.augmented.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+\+|\-\-)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+|\-|\*|/|%)(?!\+|\-)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\|)(\|)(?!\|)</string>
					<key>name</key>
					<string>keyword.operator.length.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\??\$)</string>
					<key>name</key>
					<string>keyword.operator.dereference.bro</string>
				</dict>
			</array>
		</dict>
		<key>statements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(local|add|delete|print|for|next|break|if|else|switch|case|default|break|fallthrough|when|schedule|return)\b</string>
					<key>name</key>
					<string>keyword.control.flow.bro</string>
				</dict>
			</array>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{,2}|[4-7]\d?|x[a-fA-F0-9]{,2})</string>
					<key>name</key>
					<string>constant.character.escape.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\(\\|[/\^\$\{\}\[\]\(\)\.\*\+\?\|\-])</string>
					<key>name</key>
					<string>constant.character.escape.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.bro</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
						(\d+\$)?                             # field (argument #)
						[#0\- +']*                           # flags
						[,;:_]?                              # separator character (AltiVec)
						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
						[diouxXDOUeEfFgGaACcSspn%]           # conversion type
					</string>
					<key>name</key>
					<string>constant.other.placeholder.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.bro</string>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(bool|count|int|double|time|interval|string|pattern|port|addr|subnet|time|enum|table|set|vector|record|function|event|hook|file|opaque|any)\b</string>
					<key>name</key>
					<string>storage.type.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(of)\b</string>
					<key>name</key>
					<string>keyword.operator.bro</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.bro</string>
	<key>uuid</key>
	<string>d301f32f-e93c-4f8f-9da6-b87926f53d4f</string>
</dict>
</plist>
